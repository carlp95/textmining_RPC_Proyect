/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visual;

import Logic.Classifier;
import Logic.PDFProcesses;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author judajocu
 */
public class MainVisual extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    private File FilePath;
    Image log_image, execute_image, find_image;
    private String aux;
    String temp;

    boolean flag = false;

    public MainVisual() {
        try{
            log_image = ImageIO.read(new File("resources/images/history.png"));
            execute_image = ImageIO.read(new File("resources/images/play-button.png"));
            find_image = ImageIO.read(new File("resources/images/research.png"));
            this.setIconImage(ImageIO.read(new File("resources/images/house.png")));
        }catch (Exception e){
            e.printStackTrace();
        }
        initComponents();
        this.setTitle("Ventana Principal");
        this.setResizable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_Principal = new javax.swing.JPanel();
        Label_Buscar_Paper = new javax.swing.JLabel();
        Boton_Buscar_paper = new javax.swing.JButton(new ImageIcon(find_image));
        historybtn = new javax.swing.JButton(new ImageIcon(log_image));
        filePathTextField = new javax.swing.JTextField();
        executeAlgorithmbtn = new javax.swing.JButton(new ImageIcon(execute_image));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Label_Buscar_Paper.setText("Buscar paper");
        Label_Buscar_Paper.setName("Buscar_paper"); // NOI18N

        Boton_Buscar_paper.setText("Browse");
        Boton_Buscar_paper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Buscar_paperActionPerformed(evt);
            }
        });

        historybtn.setText("Historial");
        historybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historybtnActionPerformed(evt);
            }
        });

        executeAlgorithmbtn.setText("Ejecutar");
        executeAlgorithmbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeAlgorithmbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_PrincipalLayout = new javax.swing.GroupLayout(Panel_Principal);
        Panel_Principal.setLayout(Panel_PrincipalLayout);
        Panel_PrincipalLayout.setHorizontalGroup(
            Panel_PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_PrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(historybtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Label_Buscar_Paper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(Panel_PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_PrincipalLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filePathTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Boton_Buscar_paper))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_PrincipalLayout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(executeAlgorithmbtn)))
                .addContainerGap())
        );
        Panel_PrincipalLayout.setVerticalGroup(
            Panel_PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_PrincipalLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(Panel_PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Buscar_Paper)
                    .addComponent(Boton_Buscar_paper)
                    .addComponent(filePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(Panel_PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(historybtn)
                    .addComponent(executeAlgorithmbtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_Principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_Principal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Panel_Principal.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Boton_Buscar_paperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Buscar_paperActionPerformed
        // TODO add your handling code here:
        JFrame parent = new JFrame();
        Progress progress = new Progress(null,true);

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Buscar Archivo");

        int userSelection = fileChooser.showDialog(parent,"Seleccionar");
        if(userSelection == JFileChooser.APPROVE_OPTION){
            progress.ac = new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {

                    progress.value = progress.value + 1;
                    progress.progressbar.setValue(progress.value);
                    File fileget = fileChooser.getSelectedFile();
                    File filepath = new File(fileget.toString());
                    FilePath = filepath;
                    if(progress.progressbar.getValue() == 1){
                        progress.progresslbl.setText("Cargando archivo pdf ...");
                    }
                    if(progress.progressbar.getValue() == 5){

                        filePathTextField.setText(filepath.toString());

                    }
                    if(progress.progressbar.getValue() == 15){
                        PDFProcesses pdfProcesses = new PDFProcesses();
                        if(getFileExtension(FilePath).equals("pdf")){
                            progress.progresslbl.setText("Extrayendo información del PDF");
                            pdfProcesses.OneDocumentToText(filepath);
                            flag = false;
                        }else {
                            progress.progresslbl.setText("Extrayendo información ...");
                            aux = FilePath.toString();
                            flag = true;
                        }
                    }
                    if(progress.progressbar.getValue() == 100){
                        progress.dispose();
                        progress.timer.stop();
                    }
                }
            };
            progress.timer = new Timer(100,progress.ac);
            progress.timer.start();
            progress.setVisible(true);

        }
    }//GEN-LAST:event_Boton_Buscar_paperActionPerformed

    private void historybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historybtnActionPerformed
        // TODO add your handling code here:
        History historyVisual = new History(null,true);
        historyVisual.setLocationRelativeTo(null);
        historyVisual.setVisible(true);
    }//GEN-LAST:event_historybtnActionPerformed

    private void executeAlgorithmbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeAlgorithmbtnActionPerformed
        // TODO add your handling code here:

        Classifier classifier = new Classifier();
        if(flag){
            classifier.load(aux);
        }
        else {
            temp = FilePath.getName().replace(".pdf","_cleaned.txt");
            //classifier.load("resources/papers/"+temp);
            classifier.load(FilePath.getPath().replace(".pdf","_cleaned.txt"));
        }
        classifier.loadModel("resources/dataset_model.dat");
        classifier.makeInstance();
        classifier.classify();
        ResultDialog resultDialog = new ResultDialog(null, false);
        resultDialog.paperTextField.setText(classifier.Ruta);
        resultDialog.belongsToTextField.setText(classifier.pertenece);
        BufferedWriter bw = null;
        FileWriter fw = null;

        try{

            fw = new FileWriter("resources/results.txt",true);
            bw = new BufferedWriter(fw);

            bw.write("\nPaper: "+resultDialog.paperTextField.getText() + "\nPertenece a: " + resultDialog.belongsToTextField.getText() + "\n");
            bw.write("-------------------------------------------------------------------------------------------"+ "\n");

        }catch (IOException e){
            e.printStackTrace();
        }finally
        {
            try
            {
                if (bw != null)
                {
                    bw.close();
                }
                if (fw != null)
                {
                    fw.close();
                }
            } catch (IOException ex)
            {
                ex.printStackTrace();
            }

        }
        resultDialog.setLocationRelativeTo(null);
        resultDialog.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_executeAlgorithmbtnActionPerformed

    private String getFileExtension(File file) {
        String fileName = file.getName();
        if(fileName.lastIndexOf(".") != -1 && fileName.lastIndexOf(".") != 0)
            return fileName.substring(fileName.lastIndexOf(".")+1);
        else return "";
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton_Buscar_paper;
    private javax.swing.JLabel Label_Buscar_Paper;
    private javax.swing.JPanel Panel_Principal;
    private javax.swing.JButton executeAlgorithmbtn;
    private javax.swing.JTextField filePathTextField;
    private javax.swing.JButton historybtn;
    // End of variables declaration//GEN-END:variables
}
